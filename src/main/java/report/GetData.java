package main.java.report;

import main.java.report.enums.ReportElements;
import main.java.report.lists.descDevices;
import main.java.report.lists.devices;
import main.java.report.lists.lastData;
import main.java.report.mainClass.Main;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;

import static java.lang.System.exit;
import static main.java.report.ReportMethods.clipboardComment;

public class GetData {

    public static String getPlatform() throws IOException, InterruptedException {
        System.out.println("1 - AOS \n2 - iOS");
        Scanner scan = new Scanner(System.in);
        String BoC = scan.nextLine();
        String item = null;
        switch (BoC) {
            case "1", "2" -> item = BoC;
            case "reboot", "r" -> Main.retry();
            default -> {
                System.out.println("–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!");
                item = getPlatform();
            }
        }
        return item;
    }

    public static String getBoC() throws IOException, InterruptedException {
        System.out.println("–°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä: " +
                "\n1 - üî¥ –ë–∞–≥  " +
                "\n2 - \uD83D\uDD30 –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π  " +
                "\n3 - üìÖ QA Report  " +
                "\n4 - ‚úÖ –°—Ç–∞—Ç—É—Å: Done  " +
                "\n5 - ‚ùå –°—Ç–∞—Ç—É—Å: Fail " +
                "\n6 - \uD83D\uDD00 –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–µ—Ä—Å–∏–π: ASCII to Hex" +
                "\n7 - \uD83D\uDCDF –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR –¥–ª—è JIMM" +
                "\n8 - \uD83D\uDEA8 –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É" +
                "\n\nUpdate - \uD83D\uDD04 –ü–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ\n\n");
        Scanner scan = new Scanner(System.in);
        String BoC = scan.nextLine();
        String item = null;
        switch (BoC) {
            case "1", "2" -> {
                item = BoC;
                System.out.println("\n\n");
            }
            case "3" -> {
                qaReport();
                System.out.println(ReportElements.Space50.getString());
                item = getBoC();
                System.out.println("\n\n");
            }
            case "4" -> {
                ReportMethods.clipboardIndex("Done!‚úÖ");
                System.out.println(ReportElements.Space50.getString());
                item = getBoC();
                System.out.println("\n\n");
            }
            case "5" -> {
                ReportMethods.clipboardIndex("Fail‚ùå");
                System.out.println(ReportElements.Space50.getString());
                item = getBoC();
            }
            case "6" -> {
                System.out.println("–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∏ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏—Ö –≤ HEX  \n");
                System.out.println("–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—à–∏–≤–∫–∏ —Ö–∞–±–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∞–∫–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ -> 209113\n" +
                        "–ò –ø–æ–ª—É—á–∞–µ–º —Ç–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ö–∞–±–∞ -> 2.9.113\n");

                System.out.println("–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—à–∏–≤–∫–∏ –¥–µ–≤–∞–π—Å–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∞–∫–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ -> 5420102\n" +
                        "–ò –ø–æ–ª—É—á–∞–µ–º —Ç–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –¥–µ–≤–∞–π—Å–∞ -> 5.42.01.02\n");

                decToHex.startHEX();
                item = getBoC();
            }

            case "7" -> {
                System.out.println("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø –¥–∞—Ç—á–∏–∫–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!\n");
                descDevices.getAllDevices();
                String type = Scan.scanText();
                devices.checkType(type);
                System.out.println(ReportElements.Space50.getString());
                item = getBoC();
            }
            case "8" -> {
              exit(0);
            }

            case "Update","update","UPDATE","uPDATE" -> {
                String link = "https://ajaxsystems.atlassian.net/wiki/spaces/AC/pages/2160657041/LOGAN.jar";
                System.out.println(link);
                java.awt.Desktop.getDesktop().browse(java.net.URI.create(link));
                System.out.println("–°—Å—ã–ª–∫–∞ —É–∂–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!");
                ReportMethods.clipboardIndex(link);
                item = getBoC();
            }
            case "reboot", "r" -> Main.retry();
            case "last","l","–¥","–î","L" ->  {
                if (!(lastData.appVer.equals("null"))){
                    clipboardComment();
                } else {
                    System.out.println("–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –Ω–µ—Ç, –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∑–∞–Ω–æ–≤–æ!\n\n");
                }
                item = getBoC();
            }
            default -> {
                System.out.println(ReportElements.Space50.getString());
                System.out.println("–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!");
                item = getBoC();
            }
        }
        return item;
    }

    public static void qaReport() {
        System.out.println(getDate());
        ReportMethods.clipboardIndex(getDate());
    }

    public static String getDate() {
        Date date = new Date();
        SimpleDateFormat formatForDateNow = new SimpleDateFormat("dd.MM.yyyy");
        String currentDate = formatForDateNow.format(date);
        return "–î–∞—Ç–∞ \uD83D\uDCC5: " + currentDate + "\n\n" +
                "Status Fail‚ùå: \n\n" +
                "Status Done‚úÖ: \n\n";
    }
}
